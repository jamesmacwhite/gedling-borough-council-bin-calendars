# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main
    paths-ignore:
      - '.dev.vars'
      - '.editorconfig'
      - '.github/workflows/cloudflare-worker-deploy.yml'
      - '.gitignore'
      - '.prettierrc'
      - '.vscode/**'
      - '.wrangler/**'
      - 'API.md'
      - 'Gedling Borough Council Bin Collection API.postman_collection.json'
      - 'LICENSE'
      - 'README.md'
      - 'USAGE.md'
      - 'wrangler.toml'
      - 'worker.js'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Restore Timestamps
        uses: chetan/git-restore-mtime-action@v1    

      - name: Setup Node.js for JavaScript/JSON build
        uses: actions/setup-node@v4
      - run: npm i
      - run: npm run build
      - run: npm run test

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
